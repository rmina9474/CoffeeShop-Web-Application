@model Reina.MacCredy.Models.Product
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = Model.Name;
    var options = ViewBag.ProductOptions as List<ProductOption> ?? new List<ProductOption>();
    var optionTypes = ViewBag.OptionTypes as List<string> ?? new List<string>();
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Product" asp-action="Browse">Menu</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-md-5">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid rounded cafe-product-image">
            }
            else
            {
                <img src="/images/default-coffee.jpg" alt="Default Image" class="img-fluid rounded cafe-product-image">
            }
        </div>
        
        <div class="col-md-7">
            <h2 class="mb-2">@Model.Name</h2>
            
            @if (Model.Category != null)
            {
                <span class="badge bg-secondary mb-2">@Model.Category.Name</span>
            }
            
            <div class="mb-3">
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    <div class="d-flex align-items-center mb-2">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Math.Round(Model.AverageRating))
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            else
                            {
                                <i class="bi bi-star text-warning"></i>
                            }
                        }
                        <span class="ms-2">(@Model.Reviews.Count reviews)</span>
                    </div>
                }
            </div>
            
            <div class="product-description mb-4">
                <p>@Model.Description</p>
                
                @if (!string.IsNullOrEmpty(Model.PrepTime))
                {
                    <p><i class="bi bi-clock me-2"></i> Prep time: @Model.PrepTime</p>
                }
            </div>
            
            <div class="pricing mb-4">
                <h4 class="product-price">$@Model.Price.ToString("0.00")</h4>
                <span id="additional-price-display" class="text-muted" style="display:none;">
                    + $<span id="additional-price">0.00</span> for selected options
                </span>
            </div>
            
            <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post" class="mb-4">
                <input type="hidden" name="productId" value="@Model.Id" />
                <input type="hidden" name="totalPrice" id="totalPriceInput" value="@Model.Price" />
                <input type="hidden" name="selectedOptions" id="selectedOptionsInput" value="" />
                
                @if (Model.CanCustomize && options.Any())
                {
                    <div class="cafe-customization mb-4">
                        <h5>Customize Your Order</h5>
                        
                        @foreach (var optionType in optionTypes)
                        {
                            <div class="option-group mb-3">
                                <div class="option-group-title mb-2">@optionType</div>
                                <div class="btn-group" role="group">
                                    @foreach (var option in options.Where(o => o.OptionType == optionType))
                                    {
                                        <input type="radio" 
                                                class="btn-check product-option" 
                                                name="option-@optionType" 
                                                id="option-@option.Id" 
                                                value="@option.Id"
                                                data-price="@option.AdditionalPrice"
                                                data-option-type="@option.OptionType"
                                                @(option.IsDefault ? "checked" : "")>
                                        <label class="btn btn-outline-primary" for="option-@option.Id">
                                            @option.Name
                                            @if (option.AdditionalPrice > 0)
                                            {
                                                <span class="ms-1">(+$@option.AdditionalPrice.ToString("0.00"))</span>
                                            }
                                        </label>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
                
                <div class="quantity-section mb-3">
                    <label for="quantity" class="form-label">Quantity</label>
                    <div class="input-group quantity-control" style="width: 130px;">
                        <button type="button" class="btn btn-outline-secondary" id="decrease-quantity">-</button>
                        <input type="number" id="quantity" name="quantity" class="form-control text-center" value="1" min="1" max="10">
                        <button type="button" class="btn btn-outline-secondary" id="increase-quantity">+</button>
                    </div>
                </div>
                
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Add to Cart</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Reviews Section -->
    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        <div class="reviews-section mt-5">
            <h3>Customer Reviews</h3>
            <hr />
            
            @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt))
            {
                <div class="review-item mb-4">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="review-rating mb-1">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= review.Rating)
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-warning"></i>
                                    }
                                }
                            </div>
                            <h5 class="review-author">@(review.User?.UserName ?? "Anonymous")</h5>
                        </div>
                        <small class="text-muted">@review.CreatedAt.ToString("MMM dd, yyyy")</small>
                    </div>
                    <p class="review-text">@review.Comment</p>
                </div>
            }
        </div>
    }
    
    <!-- Add Review Section -->
    @if (User.Identity?.IsAuthenticated == true && ViewBag.HasOrdered == true && !Model.Reviews?.Any(r => r.UserId == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value) == true)
    {
        <div class="add-review-section mt-4">
            <h4>Write a Review</h4>
            <form asp-controller="Product" asp-action="AddReview" method="post">
                <input type="hidden" name="productId" value="@Model.Id" />
                
                <div class="mb-3">
                    <label for="rating" class="form-label">Rating</label>
                    <div class="rating-stars">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <input type="radio" id="star@i" name="rating" value="@i" class="d-none" @(i == 5 ? "checked" : "") />
                            <label for="star@i" class="star-label"><i class="bi bi-star fs-4"></i></label>
                        }
                    </div>
                </div>
                
                <div class="mb-3">
                    <label for="comment" class="form-label">Your Review</label>
                    <textarea id="comment" name="comment" class="form-control" rows="3" required></textarea>
                </div>
                
                <button type="submit" class="btn btn-primary">Submit Review</button>
            </form>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Quantity controls
            $('#increase-quantity').click(function() {
                var quantity = parseInt($('#quantity').val());
                if (quantity < 10) {
                    $('#quantity').val(quantity + 1);
                }
            });
            
            $('#decrease-quantity').click(function() {
                var quantity = parseInt($('#quantity').val());
                if (quantity > 1) {
                    $('#quantity').val(quantity - 1);
                }
            });
            
            // Rating stars interaction
            $('.star-label').hover(
                function() {
                    var index = $(this).prev('input').val();
                    for (var i = 1; i <= 5; i++) {
                        if (i <= index) {
                            $('#star' + i).next('label').find('i').removeClass('bi-star').addClass('bi-star-fill');
                        } else {
                            $('#star' + i).next('label').find('i').removeClass('bi-star-fill').addClass('bi-star');
                        }
                    }
                },
                function() {
                    $('.star-label i').removeClass('bi-star-fill').addClass('bi-star');
                    var selected = $('input[name="rating"]:checked').val();
                    for (var i = 1; i <= selected; i++) {
                        $('#star' + i).next('label').find('i').removeClass('bi-star').addClass('bi-star-fill');
                    }
                }
            );
            
            $('.star-label').click(function() {
                var index = $(this).prev('input').val();
                for (var i = 1; i <= 5; i++) {
                    if (i <= index) {
                        $('#star' + i).next('label').find('i').removeClass('bi-star').addClass('bi-star-fill');
                    } else {
                        $('#star' + i).next('label').find('i').removeClass('bi-star-fill').addClass('bi-star');
                    }
                }
            });
            
            // Calculate total price based on selected options
            updateTotalPrice();
            
            $('.product-option').change(function() {
                updateTotalPrice();
            });
            
            function updateTotalPrice() {
                var basePrice = @Model.Price;
                var additionalPrice = 0;
                var selectedOptions = [];
                
                $('.product-option:checked').each(function() {
                    var optionPrice = parseFloat($(this).data('price'));
                    var optionId = $(this).val();
                    var optionType = $(this).data('option-type');
                    
                    additionalPrice += optionPrice;
                    selectedOptions.push({
                        id: optionId,
                        type: optionType
                    });
                });
                
                if (additionalPrice > 0) {
                    $('#additional-price').text(additionalPrice.toFixed(2));
                    $('#additional-price-display').show();
                } else {
                    $('#additional-price-display').hide();
                }
                
                var totalPrice = basePrice + additionalPrice;
                $('#totalPriceInput').val(totalPrice.toFixed(2));
                $('#selectedOptionsInput').val(JSON.stringify(selectedOptions));
            }
        });
    </script>
}
