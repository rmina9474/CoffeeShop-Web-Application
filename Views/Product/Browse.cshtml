@model IEnumerable<Reina.MacCredy.Models.Product>

@{
    ViewData["Title"] = "Our Menu";
}

<section class="menu-hero py-5 mb-4 coffee-hero">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <h1 class="display-5 fw-bold text-coffee mb-2">Our Products</h1>
                <p class="lead mb-0">Discover our complete collection of high-quality products</p>
            </div>
        </div>
    </div>
</section>

<div class="container pb-5">
    <!-- Search and Filter Controls -->
    <div class="menu-controls bg-white rounded-4 shadow-sm p-3 mb-4">
        <div class="row g-3 align-items-center">
            <div class="col-lg-5 col-md-6">
                <!-- Search Form -->
                <form method="get" class="search-form">
                    <div class="input-group">
                        <input type="text" name="searchQuery" class="form-control border-coffee" 
                               placeholder="Search products..." value="@ViewBag.SearchQuery">
                        <button type="submit" class="btn btn-brown">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </form>
            </div>
            <div class="col-lg-7 col-md-6">
                <div class="d-flex justify-content-md-end">
                    <!-- Sort Controls -->
                    <div class="btn-group">
                        <a asp-action="Browse" asp-route-sortOrder="asc" asp-route-searchQuery="@ViewBag.SearchQuery" 
                           class="btn @(ViewBag.CurrentSort == "asc" ? "btn-brown" : "btn-outline-brown")">
                            <i class="bi bi-sort-numeric-down me-1"></i> Price: Low to High
                        </a>
                        <a asp-action="Browse" asp-route-sortOrder="desc" asp-route-searchQuery="@ViewBag.SearchQuery" 
                           class="btn @(ViewBag.CurrentSort == "desc" ? "btn-brown" : "btn-outline-brown")">
                            <i class="bi bi-sort-numeric-up me-1"></i> Price: High to Low
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var item in Model)
        {
            double avgRating = item.Reviews != null && item.Reviews.Any() 
                ? Math.Round(item.Reviews.Average(r => r.Rating), 1) 
                : 0;
            int ratingCount = item.Reviews != null ? item.Reviews.Count : 0;

            <div class="col d-flex">
                <div class="card h-100 shadow-sm border-0 rounded-3 product-card w-100">
                    <div class="position-relative product-image-wrapper">
                        <img src="@item.ImageUrl" class="product-image rounded-top-3" alt="@item.Name">
                        <div class="product-actions-overlay">
                            <button class="btn-icon quick-view-btn" data-bs-toggle="modal" data-bs-target="#quickViewModal-@item.Id">
                                <i class="bi bi-eye"></i>
                            </button>
                            <button class="btn-icon add-to-cart-btn-overlay" data-product-id="@item.Id" data-quantity="1">
                                <i class="bi bi-cart-plus"></i>
                            </button>
                        </div>
                        @if (item.Category != null)
                        {
                            <span class="badge bg-brown position-absolute top-0 start-0 m-2">@item.Category.Name</span>
                        }
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h3 class="product-name text-truncate-2 mb-2">@item.Name</h3>
                        
                        <!-- Product Rating -->
                        <div class="product-rating mb-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Floor(avgRating))
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                                else if (i - avgRating > 0 && i - avgRating < 1)
                                {
                                    <i class="bi bi-star-half text-warning"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                            }
                            <span class="ms-1 text-muted small">(@ratingCount)</span>
                        </div>
                        
                        <p class="product-description text-truncate-2 mb-3 text-muted">@(item.Description ?? "No description available")</p>
                        
                        <div class="mt-auto">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="product-price fw-bold fs-5 text-coffee-medium">@item.Price.ToString("#,##0") VND</div>
                                @if (item.PrepTime != null)
                                {
                                    <div class="prep-time small text-muted">
                                        <i class="bi bi-clock me-1"></i>@item.PrepTime
                                    </div>
                                }
                            </div>
                            
                            <div class="product-actions d-flex">
                                <a asp-controller="Product" asp-action="Display" asp-route-id="@item.Id" class="btn btn-outline-brown btn-sm me-2 flex-grow-1">
                                    <i class="bi bi-info-circle me-1"></i> Details
                                </a>
                                <button class="btn btn-brown btn-sm add-to-cart-btn flex-grow-1" data-product-id="@item.Id" data-quantity="1">
                                    <i class="bi bi-cart-plus me-1"></i> Order
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Quick View Modal -->
            <div class="modal fade" id="quickViewModal-@item.Id" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content border-0 rounded-4 overflow-hidden">
                        <div class="modal-header border-0 bg-coffee-cream">
                            <h5 class="modal-title text-coffee">@item.Name</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body p-0">
                            <div class="row g-0">
                                <div class="col-md-5">
                                    <img src="@item.ImageUrl" class="img-fluid h-100 object-cover" alt="@item.Name">
                                </div>
                                <div class="col-md-7 p-4">
                                    <!-- Rating in Modal -->
                                    <div class="mb-3">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(avgRating))
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else if (i - avgRating > 0 && i - avgRating < 1)
                                            {
                                                <i class="bi bi-star-half text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-warning"></i>
                                            }
                                        }
                                        <span class="ms-1 text-muted">@avgRating.ToString("0.0") (@ratingCount @(ratingCount == 1 ? "review" : "reviews"))</span>
                                    </div>
                                    <div class="fs-4 text-coffee-dark fw-bold mb-3">@item.Price.ToString("#,##0") VND</div>
                                    <p class="mb-4">@(item.Description ?? "No description available")</p>
                                    
                                    @if (item.CanCustomize)
                                    {
                                        <div class="customize-options mb-4">
                                            <h6 class="fw-bold mb-3"><i class="bi bi-sliders me-2"></i>Customize Your Order</h6>
                                            <div class="option-selector">
                                                @{
                                                    var options = ViewBag.ProductOptions as List<Reina.MacCredy.Models.ProductOption>;
                                                    var productOptions = options?.Where(o => o.ProductId == item.Id).ToList();
                                                    var optionTypes = productOptions?.Select(o => o.OptionType).Distinct().ToList();
                                                }
                                                
                                                @if (productOptions != null && productOptions.Any())
                                                {
                                                    @foreach (var optionType in optionTypes)
                                                    {
                                                        <div class="option-group mb-3">
                                                            <label class="d-block mb-2 fw-semibold">@optionType</label>
                                                            <div class="btn-group-vertical w-100">
                                                                @foreach (var option in productOptions.Where(o => o.OptionType == optionType))
                                                                {
                                                                    <input type="radio" class="btn-check" name="options-@optionType-@item.Id" 
                                                                           id="option-@option.Id" value="@option.Id" @(option.IsDefault ? "checked" : "")>
                                                                    <label class="btn btn-outline-brown text-start mb-1 rounded" for="option-@option.Id">
                                                                        @option.Name
                                                                        @if (option.AdditionalPrice > 0)
                                                                        {
                                                                            <span class="ms-auto">+@option.AdditionalPrice.ToString("#,##0") VND</span>
                                                                        }
                                                                    </label>
                                                                }
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    }
                                    
                                    <div class="d-flex flex-column flex-sm-row align-items-start align-items-sm-center gap-3 mb-4">
                                        <div class="quantity-control d-flex align-items-center mb-3 mb-sm-0">
                                            <button class="quantity-btn decrease-btn btn btn-outline-brown px-3" data-product-id="@item.Id">-</button>
                                            <input type="number" value="1" min="1" class="quantity-input form-control mx-2 text-center" style="width: 60px;" id="modal-quantity-@item.Id">
                                            <button class="quantity-btn increase-btn btn btn-outline-brown px-3" data-product-id="@item.Id">+</button>
                                        </div>
                                        <button class="btn btn-brown modal-add-to-cart w-100 w-sm-auto" data-product-id="@item.Id">
                                            <i class="bi bi-cart-plus me-2"></i> Order
                                        </button>
                                    </div>
                                    <a asp-controller="Product" asp-action="Display" asp-route-id="@item.Id" class="btn btn-outline-brown w-100">
                                        <i class="bi bi-info-circle me-2"></i> View Full Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-search fs-1 text-coffee-light"></i>
            <h3 class="mt-3 text-coffee">No products found</h3>
            <p class="text-muted">Try a different search term or browse all our products</p>
            <a asp-action="Browse" class="btn btn-brown mt-3">View All Products</a>
        </div>
    }
</div>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="cartToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-brown text-white">
            <i class="bi bi-cart-check me-2"></i>
            <strong class="me-auto">Order</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            <p id="cartToastMessage">Product added to order!</p>
            <div class="mt-2 pt-2 border-top">
                <a asp-controller="ShoppingCart" asp-action="Index" class="btn btn-brown btn-sm">View Order</a>
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="toast">Continue Shopping</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/menu.css" asp-append-version="true" />
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add to order button click event
            $('.add-to-cart-btn, .add-to-cart-btn-overlay').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $(this).data('quantity');
                addToCart(productId, quantity);
            });
            
            // Modal add to order button click event
            $('.modal-add-to-cart').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $('#modal-quantity-' + productId).val();
                
                // Get selected options if any
                var selectedOptions = [];
                $('#quickViewModal-' + productId + ' input[type="radio"]:checked').each(function() {
                    selectedOptions.push($(this).val());
                });
                
                addToCart(productId, quantity, selectedOptions);
                $('#quickViewModal-' + productId).modal('hide');
            });
            
            // Quantity buttons in modal
            $('.decrease-btn').click(function() {
                var productId = $(this).data('product-id');
                var inputField = $('#modal-quantity-' + productId);
                var value = parseInt(inputField.val()) - 1;
                inputField.val(value < 1 ? 1 : value);
            });
            
            $('.increase-btn').click(function() {
                var productId = $(this).data('product-id');
                var inputField = $('#modal-quantity-' + productId);
                inputField.val(parseInt(inputField.val()) + 1);
            });
            
            function addToCart(productId, quantity, options) {
                var data = { 
                    productId: productId, 
                    quantity: quantity 
                };
                
                if (options && options.length > 0) {
                    data.options = JSON.stringify(options);
                }
                
                $.ajax({
                    url: '@Url.Action("AddToCart", "ShoppingCart")',
                    type: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    data: data,
                    success: function(response) {
                        if (response && response.success) {
                            // Show toast notification
                            var toast = new bootstrap.Toast(document.getElementById('cartToast'));
                            toast.show();
                            
                            // Update cart count in navbar
                            updateCartCount();
                        } else {
                            console.error("Failed to add to order:", response);
                            alert("Failed to add product to order. Please try again.");
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("AJAX error:", status, error);
                        console.log("Response:", xhr.responseText);
                        alert("Failed to add product to order. Please try again later.");
                    }
                });
            }
            
            function updateCartCount() {
                $.ajax({
                    url: '@Url.Action("GetCartCount", "ShoppingCart")',
                    type: 'GET',
                    success: function(response) {
                        $('.cart-count').text(response);
                    }
                });
            }
            
            // Initialize cart count
            updateCartCount();
        });
    </script>
} 