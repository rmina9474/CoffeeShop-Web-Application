@model IEnumerable<Reina.MacCredy.Models.Product>
@using Microsoft.EntityFrameworkCore

@{
    ViewData["Title"] = "Home Page";
    int numOfQuantity = 1;
}

<div class="jumbotron text-center bg-light rounded-3 p-5 mb-5">
    <h1 class="display-4">Welcome to Reina.MacCredy Shop</h1>
    <p class="lead">Discover amazing products at great prices</p>
    
    <hr class="my-4">
    
    <div class="d-flex justify-content-center gap-3">
        <a asp-controller="Product" asp-action="Browse" class="btn btn-primary btn-lg">
            <i class="bi bi-shop me-2"></i> Explore Products
        </a>

        <!-- Example using CSS classes -->
        <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="btn btn-success btn-lg admin-only">
            <i class="bi bi-speedometer2 me-2"></i> Admin Dashboard
        </a>
        
        <!-- Example using tag helper -->
        <a require-admin="true" asp-area="Admin" asp-controller="Order" asp-action="Index" class="btn btn-info btn-lg text-white">
            <i class="bi bi-receipt me-2"></i> Manage Orders
        </a>
        
        <!-- Example for regular users only -->
        <a hide-for-admin="true" asp-controller="ShoppingCart" asp-action="Index" class="btn btn-warning btn-lg text-white">
            <i class="bi bi-cart3 me-2"></i> My Cart
        </a>
        
        <!-- Example requiring a specific permission -->
        <a require-permission="ManageProducts" asp-controller="Product" asp-action="Add" class="btn btn-secondary btn-lg">
            <i class="bi bi-plus-circle me-2"></i> Add Product
        </a>
    </div>
</div>

<div class="container section-padding">
    <div class="text-center mb-5">
        <h1 class="section-title">Featured Products</h1>
        <p class="text-muted">Discover our carefully selected collection of premium products</p>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var item in Model)
        {
            double avgRating = item.Reviews != null && item.Reviews.Any() 
                ? Math.Round(item.Reviews.Average(r => r.Rating), 1) 
                : 0;
            int ratingCount = item.Reviews != null ? item.Reviews.Count : 0;

            <div class="col d-flex">
                <div class="product-card">
                    <div class="product-image-wrapper">
                        <img src="@item.ImageUrl" class="product-image" alt="@item.Name">
                        <div class="product-actions-overlay">
                            <button class="btn-icon quick-view-btn" data-bs-toggle="modal" data-bs-target="#quickViewModal-@item.Id">
                                <i class="bi bi-eye"></i>
                            </button>
                        </div>
                    </div>
                    <div class="product-card-body">
                        <h3 class="product-name text-truncate-2">@item.Name</h3>
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div class="product-price">@item.Price.ToString("#,##0") VND</div>
                        </div>
                        <!-- Product Rating -->
                        <div class="product-rating mb-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Floor(avgRating))
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                                else if (i - avgRating > 0 && i - avgRating < 1)
                                {
                                    <i class="bi bi-star-half text-warning"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                            }
                            <span class="ms-1 text-muted small">(@ratingCount)</span>
                        </div>
                        <p class="product-description text-truncate-2">@(item.Description ?? "No description available")</p>
                        <div class="product-actions">
                            <a asp-controller="Product" asp-action="Display" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm me-2">
                                <i class="bi bi-info-circle"></i> Details
                            </a>
                            <button class="btn btn-primary add-to-cart-btn" data-product-id="@item.Id" data-quantity="@numOfQuantity">
                                <i class="bi bi-cart-plus"></i> Add to Cart
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Quick View Modal -->
            <div class="modal fade" id="quickViewModal-@item.Id" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header border-0">
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body p-4">
                            <div class="row g-3">
                                <div class="col-md-6 mb-4 mb-md-0">
                                    <img src="@item.ImageUrl" class="img-fluid rounded-3" alt="@item.Name">
                                </div>
                                <div class="col-md-6">
                                    <h3 class="mb-3">@item.Name</h3>
                                    <!-- Rating in Modal -->
                                    <div class="mb-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(avgRating))
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else if (i - avgRating > 0 && i - avgRating < 1)
                                            {
                                                <i class="bi bi-star-half text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-warning"></i>
                                            }
                                        }
                                        <span class="ms-1 text-muted">@avgRating.ToString("0.0") (@ratingCount @(ratingCount == 1 ? "review" : "reviews"))</span>
                                    </div>
                                    <div class="fs-4 text-primary fw-bold mb-4">@item.Price.ToString("#,##0") VND</div>
                                    <p class="mb-4">@(item.Description ?? "No description available")</p>
                                    <div class="d-flex flex-column flex-sm-row align-items-start align-items-sm-center gap-3 mb-4">
                                        <div class="quantity-control d-flex align-items-center mb-3 mb-sm-0">
                                            <button class="quantity-btn decrease-btn btn btn-outline-secondary px-3" data-product-id="@item.Id">-</button>
                                            <input type="number" value="1" min="1" class="quantity-input form-control mx-2 text-center" style="width: 60px;" id="modal-quantity-@item.Id">
                                            <button class="quantity-btn increase-btn btn btn-outline-secondary px-3" data-product-id="@item.Id">+</button>
                                        </div>
                                        <button class="btn btn-primary modal-add-to-cart w-100 w-sm-auto" data-product-id="@item.Id">
                                            <i class="bi bi-cart-plus"></i> Add to Cart
                                        </button>
                                    </div>
                                    <a asp-controller="Product" asp-action="Display" asp-route-id="@item.Id" class="btn btn-outline-primary w-100">
                                        <i class="bi bi-info-circle"></i> View Full Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="cartToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-primary text-white">
            <i class="bi bi-cart-check me-2"></i>
            <strong class="me-auto">Shopping Cart</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            <p id="cartToastMessage">Product added to cart!</p>
            <div class="mt-2 pt-2 border-top">
                <a asp-controller="ShoppingCart" asp-action="Index" class="btn btn-primary btn-sm">View Cart</a>
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="toast">Continue Shopping</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add to cart button click event
            $('.add-to-cart-btn').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $(this).data('quantity');
                addToCart(productId, quantity);
            });
            
            // Modal add to cart button click event
            $('.modal-add-to-cart').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $('#modal-quantity-' + productId).val();
                addToCart(productId, quantity);
                $('#quickViewModal-' + productId).modal('hide');
            });
            
            // Quantity buttons in modal
            $('.decrease-btn').click(function() {
                var productId = $(this).data('product-id');
                var inputField = $('#modal-quantity-' + productId);
                var value = parseInt(inputField.val()) - 1;
                inputField.val(value < 1 ? 1 : value);
            });
            
            $('.increase-btn').click(function() {
                var productId = $(this).data('product-id');
                var inputField = $('#modal-quantity-' + productId);
                inputField.val(parseInt(inputField.val()) + 1);
            });
            
            function addToCart(productId, quantity) {
                $.ajax({
                    url: '@Url.Action("AddToCart", "ShoppingCart")',
                    type: 'GET',
                    data: { productId: productId, quantity: quantity },
                    success: function(response) {
                        if (response.success) {
                            // Show toast notification
                            var toast = new bootstrap.Toast(document.getElementById('cartToast'));
                            toast.show();
                            
                            // Update cart count in navbar
                            updateCartCount();
                        }
                    }
                });
            }
            
            function updateCartCount() {
                $.ajax({
                    url: '@Url.Action("GetCartCount", "ShoppingCart")',
                    type: 'GET',
                    success: function(response) {
                        $('.cart-count').text(response);
                    }
                });
            }
            
            // Initialize cart count
            updateCartCount();

            const isAdmin = $('body').attr('data-is-admin') === 'true';
            
            if (isAdmin) {
                // Show admin-specific features
                $('.admin-js-element').show();
            } else {
                // Show user-specific features
                $('.user-js-element').show();
            }
        });
    </script>
}

