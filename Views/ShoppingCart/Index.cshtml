@model ShoppingCart

@{
    ViewData["Title"] = "Your Order";
}

<div class="container mt-4">
    <h2 class="mb-4">Your Order</h2>

    @if (Model.Items.Any())
    {
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Menu Item</th>
                        <th>Customization</th>
                        <th class="text-center">Quantity</th>
                        <th class="text-end">Price</th>
                        <th class="text-end">Subtotal</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="align-middle">
                                <div class="d-flex align-items-center">
                                    <div>@item.Name</div>
                                </div>
                            </td>
                            <td class="align-middle">
                                @if (!string.IsNullOrEmpty(item.SelectedOptions))
                                {
                                    <div>
                                        @try
                                        {
                                            var options = System.Text.Json.JsonSerializer.Deserialize<List<object>>(item.SelectedOptions);
                                            var optionsContext = Context.RequestServices.GetRequiredService<ApplicationDbContext>();
                                            foreach (var optObj in options)
                                            {
                                                var obj = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, object>>(optObj.ToString());
                                                if (obj.TryGetValue("id", out var idValue))
                                                {
                                                    int optionId = Convert.ToInt32(idValue.ToString());
                                                    var option = optionsContext.ProductOptions.FirstOrDefault(o => o.Id == optionId);
                                                    if (option != null)
                                                    {
                                                        <div class="small text-muted">@option.OptionType: @option.Name</div>
                                                    }
                                                }
                                            }
                                        }
                                        catch
                                        {
                                            <span class="small text-muted">Custom options</span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <span class="small text-muted">Standard</span>
                                }
                            </td>
                            <td class="text-center align-middle">
                                <div class="input-group input-group-sm quantity-control" style="width: 120px;">
                                    <button type="button" class="btn btn-outline-secondary btn-sm decrease-quantity" data-id="@item.ProductId"
                                            data-options="@item.SelectedOptions">-</button>
                                    <input type="number" class="form-control text-center item-quantity" value="@item.Quantity" min="1" max="10"
                                           data-id="@item.ProductId" data-options="@item.SelectedOptions">
                                    <button type="button" class="btn btn-outline-secondary btn-sm increase-quantity" data-id="@item.ProductId"
                                            data-options="@item.SelectedOptions">+</button>
                                </div>
                            </td>
                            <td class="text-end align-middle">$@item.Price.ToString("0.00")</td>
                            <td class="text-end align-middle">$@((item.Price * item.Quantity).ToString("0.00"))</td>
                            <td class="text-end align-middle">
                                <a asp-action="RemoveFromCart" asp-route-productId="@item.ProductId" 
                                   class="btn btn-sm btn-outline-danger">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4" class="text-end fw-bold">Total:</td>
                        <td class="text-end fw-bold">$@Model.GetTotal().ToString("0.00")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <a asp-controller="Product" asp-action="Browse" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i>Continue Shopping
            </a>
            <a asp-action="Checkout" class="btn btn-primary">
                Proceed to Checkout<i class="bi bi-arrow-right ms-2"></i>
            </a>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <h4 class="alert-heading">Your order is empty!</h4>
            <p>Looks like you haven't added any items to your order yet.</p>
            <hr>
            <a asp-controller="Product" asp-action="Browse" class="btn btn-primary">Browse Our Menu</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle quantity increase
            $('.increase-quantity').click(function() {
                var input = $(this).siblings('.item-quantity');
                var currentValue = parseInt(input.val());
                if (currentValue < 10) {
                    input.val(currentValue + 1);
                    updateQuantity(input);
                }
            });
            
            // Handle quantity decrease
            $('.decrease-quantity').click(function() {
                var input = $(this).siblings('.item-quantity');
                var currentValue = parseInt(input.val());
                if (currentValue > 1) {
                    input.val(currentValue - 1);
                    updateQuantity(input);
                }
            });
            
            // Handle direct input change
            $('.item-quantity').change(function() {
                updateQuantity($(this));
            });
            
            function updateQuantity(input) {
                var productId = input.data('id');
                var options = input.data('options');
                var quantity = parseInt(input.val());
                
                // Validate quantity
                if (isNaN(quantity) || quantity < 1) {
                    quantity = 1;
                    input.val(1);
                } else if (quantity > 10) {
                    quantity = 10;
                    input.val(10);
                }
                
                // Send AJAX request to update cart
                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "ShoppingCart")',
                    type: 'POST',
                    data: { 
                        productId: productId, 
                        quantity: quantity,
                        selectedOptions: options
                    },
                    success: function(response) {
                        if (response.success) {
                            // Reload the page to update totals
                            location.reload();
                        }
                    }
                });
            }
        });
    </script>
}
