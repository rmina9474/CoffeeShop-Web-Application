@model Reina.MacCredy.Models.ShoppingCart

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">
                <i class="bi bi-cart3"></i> Shopping Cart
            </h2>
        </div>
        
        <div class="card-body">
            @if (Model?.Items != null && Model.Items.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Product</th>
                                <th class="text-center">Price</th>
                                <th class="text-center">Quantity</th>
                                <th class="text-end">Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr data-product-id="@item.ProductId">
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="product-icon me-3 bg-light rounded p-3">
                                                <i class="bi bi-box-seam fs-4"></i>
                                            </div>
                                            <div>
                                                <h6 class="mb-0">@item.Name</h6>
                                                <small class="text-muted">Product ID: @item.ProductId</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-center product-price" data-price="@item.Price">@item.Price.ToString("#,##0") VND</td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center align-items-center">
                                            <button type="button" class="btn btn-outline-secondary btn-sm quantity-btn" data-action="decrease">
                                                <i class="bi bi-dash"></i>
                                            </button>
                                            <input type="number" class="form-control mx-2 text-center quantity-input" 
                                                   style="width: 70px" value="@item.Quantity" min="1" max="100">
                                            <button type="button" class="btn btn-outline-secondary btn-sm quantity-btn" data-action="increase">
                                                <i class="bi bi-plus"></i>
                                            </button>
                                        </div>
                                    </td>
                                    <td class="text-end product-total">@((item.Price * item.Quantity).ToString("#,##0")) VND</td>
                                    <td class="text-end">
                                        <button type="button" class="btn btn-outline-danger btn-sm remove-item"
                                                data-product-id="@item.ProductId">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-light">
                            <tr>
                                <td colspan="3" class="text-end">
                                    <strong>Total Amount:</strong>
                                </td>
                                <td class="text-end cart-total">
                                    <strong>@Model.Items.Sum(i => i.Price * i.Quantity).ToString("#,##0") VND</strong>
                                </td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <div class="d-flex justify-content-between align-items-center mt-4">
                    <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary">
                        <i class="bi bi-arrow-left"></i> Continue Shopping
                    </a>
                    <a asp-controller="ShoppingCart" asp-action="Checkout" class="btn btn-primary">
                        Proceed to Checkout <i class="bi bi-arrow-right"></i>
                    </a>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-cart-x display-1 text-muted mb-4"></i>
                    <h3>Your shopping cart is empty</h3>
                    <p class="text-muted">Add some products to your cart and come back here to complete your purchase.</p>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-primary mt-3">
                        <i class="bi bi-shop"></i> Start Shopping
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@if (TempData["Message"] != null)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i class="bi bi-info-circle me-2"></i>
                <strong class="me-auto">Notification</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Function to update product total
            function updateProductTotal(row) {
                const quantity = Math.max(1, parseInt(row.find('.quantity-input').val()) || 1);
                const price = parseFloat(row.find('.product-price').data('price'));
                const total = quantity * price;
                row.find('.product-total').text(total.toLocaleString('vi-VN') + ' VND');
                updateCartTotal();
            }

            // Function to update cart total
            function updateCartTotal() {
                let total = 0;
                $('.product-total').each(function() {
                    const text = $(this).text().replace(/[^\d]/g, '');
                    total += parseInt(text) || 0;
                });
                $('.cart-total strong').text(total.toLocaleString('vi-VN') + ' VND');
            }

            // Handle quantity input
            $('.quantity-input').on('input', function() {
                let value = $(this).val();
                if (value === '' || value === '0') {
                    $(this).val(1);
                }
            });

            // Handle quantity change
            $('.quantity-input').on('change', function() {
                const row = $(this).closest('tr');
                const productId = row.data('product-id');
                let quantity = parseInt($(this).val()) || 1;
                
                // Force minimum quantity of 1
                if (quantity < 1) {
                    quantity = 1;
                    $(this).val(1);
                }

                // Update server
                $.ajax({
                    url: '/ShoppingCart/AddToCart',
                    method: 'GET',
                    data: {
                        productId: productId,
                        quantity: quantity
                    },
                    success: function(response) {
                        if (response.success) {
                            $(this).val(response.quantity);
                            updateProductTotal(row);
                        }
                    }.bind(this)
                });
            });

            // Handle quantity buttons
            $('.quantity-btn').on('click', function() {
                const row = $(this).closest('tr');
                const input = row.find('.quantity-input');
                const currentVal = parseInt(input.val()) || 1;
                const action = $(this).data('action');
                
                let newVal = action === 'increase' ? currentVal + 1 : currentVal - 1;
                newVal = Math.max(1, Math.min(100, newVal));
                
                if (newVal !== currentVal) {
                    input.val(newVal).trigger('change');
                }
            });

            // Handle remove item
            $('.remove-item').on('click', function() {
                const row = $(this).closest('tr');
                const productId = $(this).data('product-id');
                
                if (confirm('Are you sure you want to remove this item?')) {
                    $.get('/ShoppingCart/RemoveFromCart', {
                        productId: productId
                    }).done(function(response) {
                        row.remove();
                        updateCartTotal();
                        if ($('tbody tr').length === 0) {
                            location.reload();
                        }
                    });
                }
            });
        });
    </script>
}
